package com.reunited.entities;

// Generated May 26, 2015 3:56:20 PM by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Timetable generated by hbm2java
 */
@Entity
@Table(name = "timetable", catalog = "reunited", uniqueConstraints = @UniqueConstraint(columnNames = {
		"TIMETABLE_SESSION_ID", "TIMETABLE_PERIOD_ID", "TIMETABLE_DAY_OF_WEEK",
		"TIMETABLE_EFFECTIVE_FROM" }))
public class Timetable implements java.io.Serializable {

	private Integer timetableId;
	private Code code;
	private Period period;
	private Session session;
	private User user;
	private int timetableDayOfWeek;
	private Date timetableEffectiveFrom;
	private Date lastUpdated;
	private String lastUpdatedBy;

	public Timetable() {
	}

	public Timetable(Code code, Period period, Session session,
			int timetableDayOfWeek, Date timetableEffectiveFrom) {
		this.code = code;
		this.period = period;
		this.session = session;
		this.timetableDayOfWeek = timetableDayOfWeek;
		this.timetableEffectiveFrom = timetableEffectiveFrom;
	}

	public Timetable(Code code, Period period, Session session, User user,
			int timetableDayOfWeek, Date timetableEffectiveFrom,
			Date lastUpdated, String lastUpdatedBy) {
		this.code = code;
		this.period = period;
		this.session = session;
		this.user = user;
		this.timetableDayOfWeek = timetableDayOfWeek;
		this.timetableEffectiveFrom = timetableEffectiveFrom;
		this.lastUpdated = lastUpdated;
		this.lastUpdatedBy = lastUpdatedBy;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "TIMETABLE_ID", unique = true, nullable = false)
	public Integer getTimetableId() {
		return this.timetableId;
	}

	public void setTimetableId(Integer timetableId) {
		this.timetableId = timetableId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIMETABLE_SUBJECT_ID", nullable = false)
	public Code getCode() {
		return this.code;
	}

	public void setCode(Code code) {
		this.code = code;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIMETABLE_PERIOD_ID", nullable = false)
	public Period getPeriod() {
		return this.period;
	}

	public void setPeriod(Period period) {
		this.period = period;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIMETABLE_SESSION_ID", nullable = false)
	public Session getSession() {
		return this.session;
	}

	public void setSession(Session session) {
		this.session = session;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIMETABLE_TEACHER_ID")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "TIMETABLE_DAY_OF_WEEK", nullable = false)
	public int getTimetableDayOfWeek() {
		return this.timetableDayOfWeek;
	}

	public void setTimetableDayOfWeek(int timetableDayOfWeek) {
		this.timetableDayOfWeek = timetableDayOfWeek;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "TIMETABLE_EFFECTIVE_FROM", nullable = false, length = 10)
	public Date getTimetableEffectiveFrom() {
		return this.timetableEffectiveFrom;
	}

	public void setTimetableEffectiveFrom(Date timetableEffectiveFrom) {
		this.timetableEffectiveFrom = timetableEffectiveFrom;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_UPDATED", length = 19)
	public Date getLastUpdated() {
		return this.lastUpdated;
	}

	public void setLastUpdated(Date lastUpdated) {
		this.lastUpdated = lastUpdated;
	}

	@Column(name = "LAST_UPDATED_BY", length = 45)
	public String getLastUpdatedBy() {
		return this.lastUpdatedBy;
	}

	public void setLastUpdatedBy(String lastUpdatedBy) {
		this.lastUpdatedBy = lastUpdatedBy;
	}

}
